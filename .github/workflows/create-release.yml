name: Create release

on:
  pull_request:
    branches:
      - 'release/*'
      - 'hotfix/*'

env:
    INVALID_EVENT_BRANCH_UNKNOWN: 1
    AZURE_WEBAPP_NAME: 3panas-template-app
    AZURE_WEBAPP_PACKAGE_PATH: './publish'
    DOTNET_VERSION: '6.0.x'

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Determining branch name
        id: extract_branch
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            branch=$(echo ${GITHUB_REF##*/})
            echo "{branch_name}={$branch}" >> GITHUB_OUTPUT
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            branch = $(echo $GITHUB_BASE_REF)
            echo "{branch_name}={$branch}" >> GITHUB_OUTPUT
          else
            exit ${{ env.INVALID_EVENT_BRANCH_UNKNOWN }}
          fi
          echo Branch - ${{ steps.extract_branch.outputs.branch_name }}


      - name: Determining target and version
        id: release_version
        run: |
            target=$(echo ${{ steps.extract_branch.outputs.branch_name }} | cut -d '/' -f1)
            version=$(echo ${{ steps.extract_branch.outputs.branch_name }} | cut -d '/' -f2)
            echo "{target}={$target}" >> GITHUB_OUTPUT
            echo "{version}={$version}" >> GITHUB_OUTPUT
            echo Version - $version
      

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}


      - name: Build and Publish
        run: |
            dotnet restore WebApi
            dotnet build WebApi -c Release --no-restore
            dotnet publish WebApi -c Release --no-build
            --output '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
      

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'