# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Deployment

on:
  workflow_run:
    workflows: ["Build & Test"]
    types:
      - completed
  workflow_dispatch:  # Este evento permite la ejecución manual
    branches:
      - master
  

env:
    INVALID_EVENT_BRANCH_UNKNOWN: 1
    WEBAPPPATH: '${{ github.workspace }}/src/Template/Template.MvcWebApp'

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.head_branch == 'master' }} || github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'master'

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18  # Especifica aquí la versión de Node.js que necesitas

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Install Node dependencies
        run: |
            cd ${{env.WEBAPPPATH}}
            npm install 
            npm run build

      - name: Install dependencies
        run: dotnet restore ${{env.WEBAPPPATH}}

      - name: Build and publish
        run: |
            dotnet build --configuration Release --no-restore ${{env.WEBAPPPATH}}
            dotnet publish -c Release --no-build -o ${{env.DOTNET_ROOT}}/publish ${{env.WEBAPPPATH}}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: DemoWeb
          path: ${{env.DOTNET_ROOT}}/publish

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.head_branch == 'master' }} || github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'master'
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: DemoWeb

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'Template-Web-Demo'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_FB17B91993324E6EA0AA926CEC5A3E4C }}
          package: .


  create-release:
    name: Create release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.head_branch == 'master' }} || github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'master'
    needs: deploy

    steps:
      - name: Check for Existing Release
        id: check_release
        run: |
          release_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/latest)
          if [ "$(echo "$release_info" | jq -r .message)" = "Not Found" ]; then
            echo "{release_version}=1" >> GITHUB_OUTPUT
          else
            echo "La última release es:"
            echo "$release_info" | jq '.tag_name, .html_url'
          fi

      - name: Package Source Code
        run: |
          zip -r SourceCode.zip .

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: DemoWeb

      - name: Package DemoWeb
        run: |
           cd ${{ github.workspace }}
           zip -r DemoWeb.zip DemoWeb 

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1  # Utiliza la acción softprops/action-gh-release
        with:
          files: |
            ./DemoWeb.zip
            ./SourceCode.zip