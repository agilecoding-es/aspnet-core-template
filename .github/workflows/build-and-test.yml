name: Build & Test

on:
  pull_request:
    branches:
      - master
      - 'release/*'

env:
  DOTNET_VERSION: '6.0.x'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Unit Tests
      run: docker compose -f ./src/Template/docker-compose.unittests.yml up
      continue-on-error: true


  integration-tests:
    name: Intragration Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run Unit Tests
      run: docker compose -f /src/Template/docker-compose.integrationtests.yml up
      continue-on-error: true

  create-artifact:
    name: Generate artifacts
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Construir imágenes Docker
      run: docker-compose build

    - name: Ejecutar contenedor y copiar archivos
      run: |
         mkdir -p artifacts
         cd /src/Template
         docker-compose up -d  # Iniciar contenedores en segundo plano
         docker cp webapp:/app/publish /${{ github.workspace }}/artifacts
         docker-compose down  # Detener y eliminar contenedores

    - name: Crear artefacto
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: artifacts/